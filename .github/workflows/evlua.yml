name: EVLUA
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
env:
  RELEASE_VERSION: 0.0.2
jobs:
  build:
    name: build evlua
    runs-on: ubuntu-22.04
    steps:
      - name: install apt dependencies
        run: |
          sudo apt-get update
          sudo apt install -y zlib1g
          sudo apt-get install -y zlib1g-dev cmake g++ build-essential clang liblzma-dev libssl-dev libreadline-dev autoconf libtool libsqlite3-dev wget zip pkg-config 
      
      - name: checkout evlua_build
        uses : actions/checkout@v3
        with :
          repository: Tekenlight/evlua_build
          path: evlua_build
      
      - name: build evlua
        run: |
          cd evlua_build
          echo "BINARY_DIR=$(pwd)/executable" >> "$GITHUB_ENV"
          bash ./evluaBuild -f -v ${{ env.RELEASE_VERSION }} -b $(pwd)
      
      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Release Notes for v${{ env.RELEASE_VERSION }}:" >> release_notes.md
          echo "- Binary to install evlua on to the machine." >> release_notes.md
          echo "- Containes executable for both developer or prod users." >> release_notes.md
          gh release create v${{ env.RELEASE_VERSION }} -F release_notes.md --repo="$GITHUB_REPOSITORY"
          rm -f release_notes.md

      - name: Upload .deb file for dev
        id: upload_dev_deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload ${{ env.RELEASE_VERSION }} ${{ env.BINARY_DIR }}/evlua-dev-${{ env.RELEASE_VERSION }}.deb --repo="$GITHUB_REPOSITORY"
      - name: Upload .deb file for prod
        id: upload_deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload ${{ env.RELEASE_VERSION }} ${{ env.BINARY_DIR }}/evlua-${{ env.RELEASE_VERSION }}.deb --repo="$GITHUB_REPOSITORY"
